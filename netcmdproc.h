#ifndef NET_CMD_PROC_H
#define NET_CMD_PROC_H
#include <gate_cmd.h>
#include <gt_com_api.h>
#include <gt_errlist.h>
#include "mod_socket.h"

/**********************************************************************************************
 * 函数名	:system_regist()
 * 功能	:将系统信息注册到远程网关服务器系统注册
 * 输入	:fd:socket连接描述符 >0表示已经建立的连接 -1表示需要让网关连
 *				接线程建立一个连接
 *			  ack:是否需要接收确认 1表示需要  0表示不需要
  *			env:签名类型，fd为正时才有意义
 *			enc:加密算法
 * 返回值	:0表示成功，负值表示失败
 **********************************************************************************************/
int  system_regist(int fd,int ack, int env, int enc,int dev_no);

/**********************************************************************************************
 * 函数名	:send_dev_state()
 * 功能	:发送设备状态到远程服务器
 * 输入	:fd:socket连接描述符 >0表示已经建立的连接 -1表示需要让网关连
 *				接线程建立一个连接
 *			  ack:是否需要接收确认 1表示需要  0表示不需要
 *			  required:是否强制发送 1表示强制发送 0表示只有状态变了才发送 
 *			env:签名类型,fd为正时才有意义
 *			enc:加密算法
 *返回值	:0表示成功，负值表示失败
 **********************************************************************************************/
int send_dev_state(int fd,int ack,int required, int env, int enc,int dev_no);
/**********************************************************************************************
 * 函数名	:send_dev_trig_state()
 * 功能	:发送设备报警信息到远程服务器
 * 输入	:fd:socket连接描述符 >0表示已经建立的连接 -1表示需要让网关连
 *				接线程建立一个连接,-2表示如果连接不上所有网关则连接
 *				紧急报警服务器
 *			  dev_rtig:报警信息结构
 *			  ack:是否需要确认 1表示需要 0表示不需要
 *				env:签名
 *				enc:加密，这两项在fd>0时有意义
 *返回值	:0表示成功，负值表示失败
 **********************************************************************************************/

int send_dev_trig_state(int fd,struct send_dev_trig_state_struct *dev_trig,int ack, int env, int enc,int dev_no);

/**********************************************************************************************
 * 函数名	:process_netcmd()
 * 功能	:处理远程计算机发来的命令
 * 输入	:fd:已连接的socket描述符
 *			 cmd:刚接收到的命令结构指针
 *			 env:接收到的命令使用的数字信封格式
 *			 enc:刚接收到的命令使用的加密类型
 *返回值	:无
 **********************************************************************************************/
void process_netcmd(int fd,struct gt_usr_cmd_struct* cmd,int env,int enc,int dev_no);

/**********************************************************************************************
 * 函数名	:init_netcmd_var()
 * 功能	:初始化网络命令处理工作相关变量
 * 输入	:无
 *返回值	:无
 **********************************************************************************************/
void init_netcmd_var(void);

/**********************************************************************************************
 * 函数名	:send_gate_ack()
 * 功能	:向网关发送一条命令的响应
 * 输入	:fd:已经建立的目标socket
 *			 rec_cmd:要响应的命令
 *			 result:执行命令的结果码
 *				env:签名
 *				enc:加密，这两项在fd>0时有意义
 *返回值	:0表示成功负值表示失败
 **********************************************************************************************/
int send_gate_ack(int fd,WORD rec_cmd,WORD result,int env, int enc,int dev_no);
/**********************************************************************************************
 * 函数名	:netcmd_second_proc()
 * 功能	:处理远程网络连接的秒处理程序
 * 输入	:无
 *返回值	:无
 **********************************************************************************************/
void netcmd_second_proc(void);


/**********************************************************************************************
 * 函数名	:send_dev_req_sync_time()
 * 功能	:发送请求对时命令到网关
 * 输入	:fd:已经建立的目标socket
 *		env:签名
 *		enc:加密
 *返回值	:0表示成功负值表示失败
 **********************************************************************************************/
int send_dev_req_sync_time(int fd,int env,int enc,int dev_no);



/**********************************************************************************************
 * 函数名	:send_para_to_rmt()
 * 功能	:将设备的配置文件发送给远程计算机
 * 输入	:fd 连接到远程计算机的文件描述符，fd不可以是负值
 *			 type:文件 值定义同struct usr_rwdevpara_struct中的定义 
 *         			（2:ip1004.ini 3:alarm.ini其他值保留）
 *			env:使用的数字信封格式
 *			enc:要使用的加密格式
 *			enack:是否需要确认
 *返回值	:0表示成功负值表示失败
 *			: -10 参数错误
 *		   	: -11不支持的格式
 **********************************************************************************************/
int send_para_to_rmt(int fd,int type,int env,int enc,int enack,int dev_no);

int get_dev_sitename(int dev_no,BYTE *devsite);




/**********************************************************************************
 *      函数名: send_alarmin_state_change()
 *      功能:  主动发送端子输入的变化状态
 *      输入:	old_alarmin，变化前的输入状态
 *				new_alarmin,变化后的输入状态
 *				time，发生变化的时间
 *      输出:   无
 *      返回值:0成功，负值失败
 *********************************************************************************/
int send_alarmin_state_change( DWORD old_alarmin, DWORD new_alarmin,time_t time, int dev_no);

#endif

