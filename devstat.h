#ifndef DEVSTAT_H
#define DEVSTAT_H
#include "gate_cmd.h"
#include "mod_socket.h"
#define REGIST_TIMEOUT		30		//如果没有收到注册确认，进行重发的时间
#define REPORTSTATE_TIMEOUT 	20		//如果没有收到状态报告确认,进行重发的时间
#define ALARM_TIMEOUT       		10		//如果没有收到报警确认，进行重发的时间
#define TRIGIN_TIMEOUT			10			//如果没有收到端子输入变化确认，进行重发的时间
struct ip1004_state_struct{			//描述设备状态的结构
	pthread_mutex_t mutex;
	int	gate_connect_flag;				//连通网关标志
	int	regist_flag;						//成功注册标志,1表示已经成功注册
	int	regist_timer;					//注册用的定时器，到指定时间如果仍未注册成功则重新注册
	int 	reportstate_flag;				//报告状态成功标志 1表示成功
	int 	reportstate_timer;				//报告状态用的超时记数器
	int 	alarm_flag;						//报警信息发送成功标志，１表示成功
	int 	alarm_timer;					//报警超时记数器
	int		trigin_flag;					//输入端子变化信息发送成功标志，１表示成功
	int 	trigin_timer;					//输入端子变化计数器
	int 	alarm_out_stat;					//报警输出状态
	struct dev_state_struct reg_dev_state;	//设备自身状态
	struct trig_state_struct 	reg_trig_state;	//设备的报警触发状态
	DWORD	alarmin_state;			//按位表示输入端子的有效状态，1为触发，0为恢复
									//和是否布撤防，是否在时间段，是否报警都没关系
	DWORD	old_alarmin_state;			//用于记录上一次的alarmin_state
	time_t	alarmin_change_time;		//用于记录alarmin_state最后一次发生改变的时间
	
	
};



/**********************************************************************************************
 * 函数名	:init_devstat()
 * 功能	:初始化设备状态结构
 * 输入	:无
 * 返回值	:无
 **********************************************************************************************/
void init_devstat(void);

/**********************************************************************************************
 * 函数名	:set_regist_flag()
 * 功能	:设置注册成功标志 1表示成功
 * 输入	:flag:要设置的注册标志的值 1表示成功
 * 返回值	:无
 **********************************************************************************************/
void set_regist_flag(int dev_no,int flag);

/**********************************************************************************************
 * 函数名	:get_regist_flag()
 * 功能	:获取注册成功标志 
 * 输入	:无
 * 返回值	:１表示注册成功０表示没有注册成功
 **********************************************************************************************/
int  get_regist_flag(int dev_no);
/**********************************************************************************************
 * 函数名	:set_reportstate_flag()
 * 功能	:设置报告状态成功标志 1表示成功
 * 输入	:flag:要设置的报告状态标志的值 1表示成功
 * 返回值	:无
 **********************************************************************************************/
void set_reportstate_flag(int dev_no, int flag);
/**********************************************************************************************
 * 函数名	:get_reportstate_flag()
 * 功能	:获取报告状态成功标志 
 * 输入	:无
 * 返回值	:１表示报告状态成功　０表示没有成功
 **********************************************************************************************/
int get_reportstate_flag(int dev_no);
/**********************************************************************************************
 * 函数名	:set_alarm_flag()
 * 功能	:设置报警成功标志 1表示成功
 * 输入	:flag:要设置的报警标志的值 1表示成功
 * 返回值	:无
 **********************************************************************************************/
void set_alarm_flag(int dev_no,int flag);

/**********************************************************************************************
 * 函数名	:get_alarm_flag()
 * 功能	:获取报警成功标志 
 * 输入	:无
 * 返回值	:１表示报警成功　０表示没有成功
 **********************************************************************************************/
int get_alarm_flag(int dev_no);

/**********************************************************************************************
 * 函数名	:set_trigin_flag()
 * 功能	:设置报端子输入状态成功标志 1表示成功
 * 输入	:flag:要设置的报端子输入状态的值 1表示成功
 * 返回值	:无
 **********************************************************************************************/
void set_trigin_flag(int dev_no,int flag);

/**********************************************************************************************
 * 函数名	:get_trigin_flag()
 * 功能	:获取报输入端子变化成功标志 
 * 输入	:无
 * 返回值	:１表示报输入端子变化成功　０表示没有成功
 **********************************************************************************************/
int get_trigin_flag(int dev_no);

/**********************************************************************************************
 * 函数名	:set_gate_connect_flag()
 * 功能	:设置已经与网关连通标志
 * 输入	:flag:要设置的标志的值　1表示已经与网关连通
 * 返回值	:无
 **********************************************************************************************/
void set_gate_connect_flag(int dev_no, int flag);
/**********************************************************************************************
 * 函数名	:get_gate_connect_flag()
 * 功能	:获取与网关连通的标志
 * 输入	:无
 * 返回值	:１表示已经与网关连通
 *		　   ０表示还没有与网关连通
 **********************************************************************************************/
int get_gate_connect_flag(int dev_no);

/**********************************************************************************************
 * 函数名	:set_alarm_out_stat()
 * 功能	:将端子输出状态设置到设备状态结构中
 * 输入	:stat:端子的输出状态
 * 返回值	:无
 **********************************************************************************************/
void set_alarm_out_stat(int dev_no,int stat);
/**********************************************************************************************
 * 函数名	:get_ip1004_state()
 * 功能	:获取设备的状态信息结构指针
 * 输入	:无
 * 返回值	:描述设备状态的结构的指针
 **********************************************************************************************/
struct ip1004_state_struct * get_ip1004_state(int dev_no);
#endif
